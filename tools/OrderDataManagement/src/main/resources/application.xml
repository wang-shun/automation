<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="  
           http://www.springframework.org/schema/beans  
           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd  
           http://www.springframework.org/schema/aop  
           http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
           http://www.springframework.org/schema/context  
           http://www.springframework.org/schema/context/spring-context-3.0.xsd">
           
    <!-- 以下 validator  ConversionService 在使用 mvc:annotation-driven 会 自动注册-->
    <bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
    </bean>
     
     <!-- 引入jdbc配置文件 -->  
     <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
               <value>classpath:properties/*.properties</value>
                <!--要是有多个配置文件，只需在这里继续添加即可 -->
            </list>
        </property>
    </bean>
    
    
    	 <!-- 扫描注解Bean -->
    <context:component-scan base-package="com.gome.test.pom.service">
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>
    
    <!-- 激活annotation功能 -->
	<context:annotation-config />
	<!-- 激活annotation功能 -->
	<context:spring-configured />
	<!-- 注解事务配置 -->

 	<!-- 类型转换及数据格式化 -->
    <bean id="conversionService" class="org.springframework.format.support.FormattingConversionServiceFactoryBean"/>	


    <!-- -->
    <!--&lt;!&ndash; 配置数据源 &ndash;&gt;-->
    <!--<bean id="dataSource"-->
    <!--class="org.springframework.jdbc.datasource.DriverManagerDataSource">-->
    <!--&lt;!&ndash; 不使用properties来配置 &ndash;&gt;-->
    <!--&lt;!&ndash;<property name="driverClassName" value="com.mysql.jdbc.Driver" />&ndash;&gt;-->
    <!--&lt;!&ndash;<property name="url" value="jdbc:mysql://localhost:3306/learning" />&ndash;&gt;-->
    <!--&lt;!&ndash;<property name="username" value="root" />&ndash;&gt;-->
    <!--&lt;!&ndash;<property name="password" value="christmas258@" />&ndash;&gt;-->
    <!--<property name="driverClassName">-->
    <!--<value>com.mysql.jdbc.Driver</value>-->
    <!--</property>-->
    <!--<property name="url">-->
    <!--<value>jdbc:mysql://10.144.32.123:3306/seoverify?useUnicode=yes&amp;characterEncoding=utf8</value>-->
    <!--&lt;!&ndash;springmybaitis是我的数据库  &ndash;&gt;-->
    <!--</property>-->
    <!--<property name="username">-->
    <!--<value>search</value>-->
    <!--</property>-->
    <!--<property name="password">-->
    <!--<value>passw0rd</value>-->
    <!--</property>-->
    <!--</bean>-->

    <!--&lt;!&ndash; 自动扫描了所有的XxxxMapper.xml对应的mapper接口文件，这样就不用一个一个手动配置Mpper的映射了，只要Mapper接口类和Mapper映射文件对应起来就可以了。 &ndash;&gt;-->
    <!--<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">-->
    <!--<property name="basePackage"-->
    <!--value="com.gome.test.difftool.dao" />-->
    <!--</bean>-->

    <!--&lt;!&ndash; 配置Mybatis的文件 ，mapperLocations配置**Mapper.xml文件位置，configLocation配置mybatis-config文件位置&ndash;&gt;-->
    <!--<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">-->
    <!--<property name="dataSource" ref="dataSource" />-->
    <!--&lt;!&ndash;<property name="mapperLocations" value="classpath*:com/gome/test/difftool/mapper/*Mapper.xml"/>&ndash;&gt;-->
    <!--<property name="configLocation" value="classpath:mybatis/mybatis-config.xml" />-->
    <!--<property name="mapperLocations" >-->
    <!--<list>-->
    <!--<value>classpath:mybatis/mapper/*Mapper.xml</value>-->
    <!--</list>-->
    <!--</property>-->
    <!--</bean>-->




</beans>
